{"ast":null,"code":"import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nexport default function EffectCards(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on\n  } = _ref;\n  extendParams({\n    cardsEffect: {\n      slideShadows: true,\n      transformEl: null,\n      rotate: true\n    }\n  });\n  const setTranslate = () => {\n    const {\n      slides,\n      activeIndex\n    } = swiper;\n    const params = swiper.params.cardsEffect;\n    const {\n      startTranslate,\n      isTouched\n    } = swiper.touchEventsData;\n    const currentTranslate = swiper.translate;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideProgress = $slideEl[0].progress;\n      const progress = Math.min(Math.max(slideProgress, -4), 4);\n      let offset = $slideEl[0].swiperSlideOffset;\n      if (swiper.params.centeredSlides && !swiper.params.cssMode) {\n        swiper.$wrapperEl.transform(`translateX(${swiper.minTranslate()}px)`);\n      }\n      if (swiper.params.centeredSlides && swiper.params.cssMode) {\n        offset -= slides[0].swiperSlideOffset;\n      }\n      let tX = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let tY = 0;\n      const tZ = -100 * Math.abs(progress);\n      let scale = 1;\n      let rotate = -2 * progress;\n      let tXAdd = 8 - Math.abs(progress) * 0.75;\n      const slideIndex = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.from + i : i;\n      const isSwipeToNext = (slideIndex === activeIndex || slideIndex === activeIndex - 1) && progress > 0 && progress < 1 && (isTouched || swiper.params.cssMode) && currentTranslate < startTranslate;\n      const isSwipeToPrev = (slideIndex === activeIndex || slideIndex === activeIndex + 1) && progress < 0 && progress > -1 && (isTouched || swiper.params.cssMode) && currentTranslate > startTranslate;\n      if (isSwipeToNext || isSwipeToPrev) {\n        const subProgress = (1 - Math.abs((Math.abs(progress) - 0.5) / 0.5)) ** 0.5;\n        rotate += -28 * progress * subProgress;\n        scale += -0.5 * subProgress;\n        tXAdd += 96 * subProgress;\n        tY = `${-25 * subProgress * Math.abs(progress)}%`;\n      }\n      if (progress < 0) {\n        // next\n        tX = `calc(${tX}px + (${tXAdd * Math.abs(progress)}%))`;\n      } else if (progress > 0) {\n        // prev\n        tX = `calc(${tX}px + (-${tXAdd * Math.abs(progress)}%))`;\n      } else {\n        tX = `${tX}px`;\n      }\n      if (!swiper.isHorizontal()) {\n        const prevY = tY;\n        tY = tX;\n        tX = prevY;\n      }\n      const scaleString = progress < 0 ? `${1 + (1 - scale) * progress}` : `${1 - (1 - scale) * progress}`;\n      const transform = `\n        translate3d(${tX}, ${tY}, ${tZ}px)\n        rotateZ(${params.rotate ? rotate : 0}deg)\n        scale(${scaleString})\n      `;\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowEl = $slideEl.find('.swiper-slide-shadow');\n        if ($shadowEl.length === 0) {\n          $shadowEl = createShadow(params, $slideEl);\n        }\n        if ($shadowEl.length) $shadowEl[0].style.opacity = Math.min(Math.max((Math.abs(progress) - 0.5) / 0.5, 0), 1);\n      }\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const $targetEl = effectTarget(params, $slideEl);\n      $targetEl.transform(transform);\n    }\n  };\n  const setTransition = duration => {\n    const {\n      transformEl\n    } = swiper.params.cardsEffect;\n    const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\n    $transitionElements.transition(duration).find('.swiper-slide-shadow').transition(duration);\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformEl\n    });\n  };\n  effectInit({\n    effect: 'cards',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","map":{"version":3,"names":["createShadow","effectInit","effectTarget","effectVirtualTransitionEnd","EffectCards","_ref","swiper","extendParams","on","cardsEffect","slideShadows","transformEl","rotate","setTranslate","slides","activeIndex","params","startTranslate","isTouched","touchEventsData","currentTranslate","translate","i","length","$slideEl","eq","slideProgress","progress","Math","min","max","offset","swiperSlideOffset","centeredSlides","cssMode","$wrapperEl","transform","minTranslate","tX","tY","tZ","abs","scale","tXAdd","slideIndex","virtual","enabled","from","isSwipeToNext","isSwipeToPrev","subProgress","isHorizontal","prevY","scaleString","$shadowEl","find","style","opacity","zIndex","round","$targetEl","setTransition","duration","$transitionElements","transition","effect","perspective","overwriteParams","watchSlidesProgress","virtualTranslate"],"sources":["D:/tiktok-ui/node_modules/swiper/modules/effect-cards/effect-cards.js"],"sourcesContent":["import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nexport default function EffectCards(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on\n  } = _ref;\n  extendParams({\n    cardsEffect: {\n      slideShadows: true,\n      transformEl: null,\n      rotate: true\n    }\n  });\n\n  const setTranslate = () => {\n    const {\n      slides,\n      activeIndex\n    } = swiper;\n    const params = swiper.params.cardsEffect;\n    const {\n      startTranslate,\n      isTouched\n    } = swiper.touchEventsData;\n    const currentTranslate = swiper.translate;\n\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideProgress = $slideEl[0].progress;\n      const progress = Math.min(Math.max(slideProgress, -4), 4);\n      let offset = $slideEl[0].swiperSlideOffset;\n\n      if (swiper.params.centeredSlides && !swiper.params.cssMode) {\n        swiper.$wrapperEl.transform(`translateX(${swiper.minTranslate()}px)`);\n      }\n\n      if (swiper.params.centeredSlides && swiper.params.cssMode) {\n        offset -= slides[0].swiperSlideOffset;\n      }\n\n      let tX = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let tY = 0;\n      const tZ = -100 * Math.abs(progress);\n      let scale = 1;\n      let rotate = -2 * progress;\n      let tXAdd = 8 - Math.abs(progress) * 0.75;\n      const slideIndex = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.from + i : i;\n      const isSwipeToNext = (slideIndex === activeIndex || slideIndex === activeIndex - 1) && progress > 0 && progress < 1 && (isTouched || swiper.params.cssMode) && currentTranslate < startTranslate;\n      const isSwipeToPrev = (slideIndex === activeIndex || slideIndex === activeIndex + 1) && progress < 0 && progress > -1 && (isTouched || swiper.params.cssMode) && currentTranslate > startTranslate;\n\n      if (isSwipeToNext || isSwipeToPrev) {\n        const subProgress = (1 - Math.abs((Math.abs(progress) - 0.5) / 0.5)) ** 0.5;\n        rotate += -28 * progress * subProgress;\n        scale += -0.5 * subProgress;\n        tXAdd += 96 * subProgress;\n        tY = `${-25 * subProgress * Math.abs(progress)}%`;\n      }\n\n      if (progress < 0) {\n        // next\n        tX = `calc(${tX}px + (${tXAdd * Math.abs(progress)}%))`;\n      } else if (progress > 0) {\n        // prev\n        tX = `calc(${tX}px + (-${tXAdd * Math.abs(progress)}%))`;\n      } else {\n        tX = `${tX}px`;\n      }\n\n      if (!swiper.isHorizontal()) {\n        const prevY = tY;\n        tY = tX;\n        tX = prevY;\n      }\n\n      const scaleString = progress < 0 ? `${1 + (1 - scale) * progress}` : `${1 - (1 - scale) * progress}`;\n      const transform = `\n        translate3d(${tX}, ${tY}, ${tZ}px)\n        rotateZ(${params.rotate ? rotate : 0}deg)\n        scale(${scaleString})\n      `;\n\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowEl = $slideEl.find('.swiper-slide-shadow');\n\n        if ($shadowEl.length === 0) {\n          $shadowEl = createShadow(params, $slideEl);\n        }\n\n        if ($shadowEl.length) $shadowEl[0].style.opacity = Math.min(Math.max((Math.abs(progress) - 0.5) / 0.5, 0), 1);\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const $targetEl = effectTarget(params, $slideEl);\n      $targetEl.transform(transform);\n    }\n  };\n\n  const setTransition = duration => {\n    const {\n      transformEl\n    } = swiper.params.cardsEffect;\n    const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\n    $transitionElements.transition(duration).find('.swiper-slide-shadow').transition(duration);\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformEl\n    });\n  };\n\n  effectInit({\n    effect: 'cards',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}